services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.local
      args:
        SECRET_KEY: ${SECRET_KEY}
        DB_HOST: ${DB_HOST}
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PORT: ${DB_PORT}
        DB_PASS: ${DB_PASS}
    container_name: film-store
    env_file: .env
    environment:
      DB_HOST: film-database
      REDIS_HOST: redis://film-redis:6379
      PYTHONUNBUFFERED: 1
    ports:
      - "8000:8000"
    depends_on:
      - database
      - redis
    volumes:
      - ./:/app
    command: sh -c "pip install -r requirements.txt && python film_store/manage.py tailwind install && python film_store/manage.py tailwind build && python film_store/manage.py collectstatic --noinput && python film_store/manage.py makemigrations && python film_store/manage.py migrate && python film_store/manage.py seed_if_no_superuser && python film_store/manage.py create_superuser_if_not_exists && cd film_store && gunicorn film_store.wsgi:application --bind 0.0.0.0:8001 --worker-class=gevent --worker-connections=20 --workers=3 & nginx -g 'daemon off;'"
    

      
  database:
    image: postgres:14-alpine
    container_name: film-database
    ports:
      - "5432:5432"
    env_file: .env
    volumes: 
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.4.0-alpine
    container_name: film-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5